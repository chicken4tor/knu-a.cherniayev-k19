// Числа від 1 до N записано по колу.
// Задається послідовність кроків KK.
// Коло обходять і послідовно видаляють кожен KK[i]-ий елемент.
// Коли послідовність кроків доходить кінця, вона запускається заново з початку.
// (Наприклад, якщо KK=[2,3,5], то починаючи з початку кола видаляють
// один елемент через 2, потім один елемент через 3, потім один елемент через 5,
// і потім знову один елемент через 2 і так далі).
// Вивести список елементів в порядку видалення.
// Вивести, яким по порядку буде видалено задане число.
// Вивести, яке число буде видалено на заданому кроці, починаючи з останнього
// (тобто якщо задано крок 0 – яке число видалиться останнім,
// якщо задано 1 – яке видалиться передостаннім і т.д.)


#include <iostream>
#include <vector>


using namespace std;


// Знову, щось подібне до ArrayDateList
class StepsRing
{
public:

    StepsRing(size_t n) : N(n)
    {}

    void append(int value)
    {
        steps.push_back(value);
    }

    void lets_go()
    {}

private:
    // Це коло
    size_t N;

    // Це кроки
    vector<int> steps;
    size_t noga_pos{};
    // Порядок видалення
    vector<int> del_order;
};

int main()
{
    StepsRing kk(10);

    kk.append(2);
    kk.append(3);
    kk.append(5);

    kk.lets_go();
}
