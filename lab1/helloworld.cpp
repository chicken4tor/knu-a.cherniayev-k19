// Інформація про повідомлення у децентралізованій соціальній мережі (є багато серверів,
// на кожному сервері до 40000 користувачів, повідомлення в рамках одного серверу).
// Для кожного повідомлення зберігаються такі дані:
//   текст повідомлення;
//   точна дата і час відправлення повідомлення;
//   користувач-автор повідомлення;
//   адресат повідомлення (існує спеціальний адресат, що позначає повідомлення для всіх);
//   тип повідомлення – новини, питання, відповідь на питання, запрошення на подію, коментар до іншого повідомлення;
//   оцінка повідомлення від системи боротьби зі спамом (дійсне невід’ємне число, чим ближче до 0 – тим менше шансів, що це спам).

// Критерії пошуку:
//  повідомлення, що починаються із заданого фрагменту тексту;
//  повідомлення заданого типу з оцінкою не менше заданої;
//  повідомлення від заданого автора, надіслані в заданому діапазоні часу.

// Необхідно реалізувати підтримку наступних операцій:
// 1.  Додавання елементів;
// 2.  Зберігання даних (запис даних у файл);
// 3.  Відновлення даних (зчитування даних з файлу);
// 4.  Вивід всіх збережених даних;
// 5.  Пошук за заданими критеріями;
// 6.  Модифікація елементів (додаткові бали);
// 7.  Видалення елементів (додаткові бали).
// Для зберігання елементів треба реалізувати наступні механізми:
// 1.  Зберігання в пам’яті, без збереження на диск (можна використати довільну структуру даних, зокрема бібліотечні структури на зразок std::vector);
// 2.  Зберігання у вигляді текстового файлу;
// 3.  Зберігання у вигляді бінарного файлу.

// Для кожного елементу, окрім описаних у відповідному варіанті даних, треба також зберігати
// унікальний ID – ціле число, яке буде унікальним для кожного елементу даних.

#include <iostream>

using namespace std;

int main()
{
    
}
